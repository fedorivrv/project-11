{"version":3,"file":"index.js","sources":["../src/js/sound-wave-api.js","../src/js/artist-modal-functionality.js"],"sourcesContent":["import axios from 'axios';\nimport {\n  errorApiIzT,\n  noDataIzT,\n  successDataIzT,\n} from './izitoast-functions.js';\naxios.defaults.baseURL = 'https://sound-wave.b.goit.study/api/';\nlet DATA_PASS;\nexport let MAX_PAGE_ARTIST = 1;\n\nexport async function getGenres() {\n  try {\n    DATA_PASS = 'genres';\n    const res = await axios.get(DATA_PASS, {});\n\n    const genres = res.data;\n    if (genres && Array.isArray(genres) && genres.length > 0) {\n      return genres;\n    } else {\n      return noDataIzT('genres');\n    }\n  } catch (error) {\n    errorApiIzT(error);\n  }\n}\n\nexport async function getArtists({ name, page, sortName, genre } = {}) {\n  DATA_PASS = 'artists';\n  const params = {\n    limit: 8,\n    page: page,\n    name,\n    sortName,\n    genre,\n  };\n  try {\n    const res = await axios.get(DATA_PASS, { params });\n\n    const artists = res.data.artists;\n    MAX_PAGE_ARTIST = Math.ceil(res.data.totalArtists / params.limit);\n    if (artists && Array.isArray(artists) && artists.length > 0) {\n      return artists;\n    } else {\n      return noDataIzT('artists');\n    }\n  } catch (error) {\n    errorApiIzT(error);\n  }\n}\n\nexport async function getArtistAlbums(id) {\n  try {\n    DATA_PASS = `artists/${id}/albums`;\n    const res = await axios.get(DATA_PASS, {});\n\n    const artistAlbums = res.data.albumsList;\n    if (\n      artistAlbums &&\n      Array.isArray(artistAlbums) &&\n      artistAlbums.length > 0\n    ) {\n      return artistAlbums;\n    } else {\n      return noDataIzT('artist albums');\n    }\n  } catch (error) {\n    errorApiIzT(error);\n  }\n}\n\nexport async function getArtist(id) {\n  try {\n    DATA_PASS = `artists/${id}`;\n    const res = await axios.get(DATA_PASS, {});\n\n    const artist = res.data;\n    if (artist) {\n      return artist;\n    } else {\n      return noDataIzT('artist');\n    }\n  } catch (error) {\n    errorApiIzT(error);\n  }\n}\n\nexport async function getRandomPageFeedbacks() {\n  try {\n    DATA_PASS = 'feedbacks';\n    const fullFeedbacks = await axios.get(DATA_PASS, {});\n    const MAX_PAGE_FEEDBACKS = Math.ceil(fullFeedbacks.data.data.length / 10);\n    const page = getRandomInt(MAX_PAGE_FEEDBACKS);\n    const params = {\n      limit: 10,\n      page: page,\n    };\n    const res = await axios.get(DATA_PASS, { params });\n\n    const feedbacks = res.data.data;\n    if (feedbacks && Array.isArray(feedbacks) && feedbacks.length > 0) {\n      return feedbacks;\n    } else {\n      return noDataIzT('feedbacks');\n    }\n  } catch (error) {\n    errorApiIzT(error);\n  }\n}\n\nexport async function postFeedback(nameArtist, ratingArtist, descArtist) {\n  const newFeedback = {\n    name: nameArtist,\n    rating: ratingArtist,\n    descr: descArtist,\n  };\n\n  DATA_PASS = 'feedbacks';\n\n  await axios\n    .post(DATA_PASS, newFeedback)\n    .then(response => {\n      successDataIzT(response);\n    })\n    .catch(error => {\n      errorApiIzT(error);\n    });\n}\n\nfunction getRandomInt(n) {\n  return Math.floor(Math.random() * n) + 1;\n}\n","import { getArtist, getArtistAlbums } from './sound-wave-api.js';\nimport { noDataIzT, errorApiIzT } from './izitoast-functions.js';\n\nconst backdrop = document.getElementById('artist-modal-backdrop');\nconst modal = document.getElementById('artist-modal');\nconst closeBtn = document.getElementById('artist-close-btn');\nconst loader = document.getElementById('artist-loader');\nconst content = document.getElementById('artist-content');\n\nlet escListener = null;\nlet outsideClickListener = null;\n\n/**\n * Відкрити модальне вікно артиста\n */\nexport async function openArtistModal(artistId) {\n  if (!backdrop.classList.contains('hidden')) return; // не відкривати, якщо вже відкрито\n\n  backdrop.classList.remove('hidden');\n  loader.classList.remove('hidden');\n  content.classList.add('hidden');\n  document.body.style.overflow = 'hidden';\n\n  try {\n    const artist = await getArtist(artistId);\n    if (!artist) {\n      noDataIzT('artist');\n      closeArtistModal();\n      return;\n    }\n\n    const albums = await getArtistAlbums(artistId) || [];\n    renderArtist(artist, albums);\n\n  } catch (err) {\n    console.error(err);\n    content.innerHTML = `<p>Error loading artist.</p>`;\n    errorApiIzT(err);\n  } finally {\n    loader.classList.add('hidden');\n    content.classList.remove('hidden');\n  }\n\n  addEventListeners();\n}\n\n/**\n * Закрити модальне вікно артиста\n */\nexport function closeArtistModal() {\n  backdrop.classList.add('hidden');\n  document.body.style.overflow = '';\n\n  removeEventListeners();\n}\n\n/**\n * Додати слухачі подій\n */\nfunction addEventListeners() {\n  if (!escListener) {\n    escListener = (e) => {\n      if (e.key === 'Escape') closeArtistModal();\n    };\n    document.addEventListener('keydown', escListener);\n  }\n\n  if (!outsideClickListener) {\n    outsideClickListener = (e) => {\n      if (e.target === backdrop) closeArtistModal();\n    };\n    backdrop.addEventListener('click', outsideClickListener);\n  }\n}\n\n/**\n * Видалити слухачі подій\n */\nfunction removeEventListeners() {\n  if (escListener) {\n    document.removeEventListener('keydown', escListener);\n    escListener = null;\n  }\n  if (outsideClickListener) {\n    backdrop.removeEventListener('click', outsideClickListener);\n    outsideClickListener = null;\n  }\n}\n\n// Закриття модалки по кнопці\ncloseBtn.addEventListener('click', closeArtistModal);\n\n/**\n * Рендер даних артиста\n */\nfunction renderArtist(artist, albums) {\n  const yearsActive = artist.startYear\n    ? artist.endYear\n      ? `${artist.startYear} - ${artist.endYear}`\n      : `${artist.startYear} - present`\n    : 'information missing';\n\n  content.innerHTML = `\n    <div class=\"artist-header\">\n      <h2>${artist.name}</h2>\n      <img src=\"${artist.image || ''}\" alt=\"${artist.name}\">\n      <p><b>Years active:</b> ${yearsActive}</p>\n      ${artist.sex ? `<p><b>Sex:</b> ${artist.sex}</p>` : ''}\n      ${artist.members ? `<p><b>Members:</b> ${artist.members}</p>` : ''}\n      ${artist.country ? `<p><b>Country:</b> ${artist.country}</p>` : ''}\n      <p><b>Biography:</b> ${artist.biography || '—'}</p>\n      <p><b>Genres:</b> ${(artist.genres || []).join(', ')}</p>\n    </div>\n    <div class=\"albums\">\n      <h3>Albums</h3>\n      ${albums.map(album => `\n        <div class=\"album\">\n          <div class=\"album-title\">${album.name} (${album.year || '—'})</div>\n          <table>\n            <thead>\n              <tr><th>Title</th><th>Duration</th><th>Link</th></tr>\n            </thead>\n            <tbody>\n              ${(album.tracks || []).map(track => `\n                <tr>\n                  <td>${track.name}</td>\n                  <td>${track.duration || '-'}</td>\n                  <td>\n                    ${track.youtube ? `<a href=\"${track.youtube}\" target=\"_blank\" class=\"yt-link\">▶</a>` : ''}\n                  </td>\n                </tr>\n              `).join('')}\n            </tbody>\n          </table>\n        </div>\n      `).join('')}\n    </div>\n  `;\n}"],"names":["axios","backdrop","closeBtn","closeArtistModal"],"mappings":"svBAMAA,EAAM,SAAS,QAAU,uCCHzB,MAAMC,EAAW,SAAS,eAAe,uBAAuB,EAClD,SAAS,eAAe,cAAc,EACpD,MAAMC,EAAW,SAAS,eAAe,kBAAkB,EAC5C,SAAS,eAAe,eAAe,EACtC,SAAS,eAAe,gBAAgB,EA0CjD,SAASC,GAAmB,CACjCF,EAAS,UAAU,IAAI,QAAQ,EAC/B,SAAS,KAAK,MAAM,SAAW,EAGjC,CAoCAC,EAAS,iBAAiB,QAASC,CAAgB"}